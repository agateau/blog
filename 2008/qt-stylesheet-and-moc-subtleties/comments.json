[{"id":"dsq-457709985","author":"Albert Astals Cid","deleted":false,"createdAt":"2008-10-07T02:05:47Z","message":"<p>CSS in Qt is EVIL avoid it as the plague!</p>","replies":[]},{"id":"dsq-457709986","author":"Leo S","deleted":false,"createdAt":"2008-10-07T02:58:05Z","message":"<p>@aac  Care to elaborate?</p>","replies":[]},{"id":"dsq-457709981","author":"Tom M","deleted":false,"createdAt":"2008-10-07T04:22:56Z","message":"<p>You can have the Q_OBJECT macro in .cpp only file too.  You just have to have moc run on foo.cpp and add #include \"foo.moc\" in the .cpp</p>","replies":[]},{"id":"dsq-457709982","author":"Kevin Kofler","deleted":false,"createdAt":"2008-10-07T04:40:44Z","message":"<p>It overrides the style and can thus lead to a look which is inconsistent with the rest of the system.</p>","replies":[]},{"id":"dsq-457709977","author":"Ian Monroe","deleted":false,"createdAt":"2008-10-07T06:04:05Z","message":"<p>Can't CSS stuff be based on objectName?</p>","replies":[]},{"id":"dsq-457709968","author":"Girish","deleted":false,"createdAt":"2008-10-07T11:17:57Z","message":"<p>You don't need to have the class in a separate header file. Just put the Q_OBJECT macro as always, and also add a #include \"internalwidget.moc\" at the end of cpp file. <br>\"qmake -project\" runs moc on cpp files if it files such an include line :)</p><p>You can also use what Ian suggested. Give all the InternalWidget the same object name (unlike html, object id's needn't be unique in Qt).</p>","replies":[]},{"id":"dsq-457709975","author":"Matthias Kretz","deleted":false,"createdAt":"2008-10-07T11:18:31Z","message":"<p>The automoc stuff in kdesupport allows you to also keep the Q_OBJECT using class declaration in the cpp file. See<br><a href=\"http://techbase.kde.org/Development/Tools/Automoc4#Features\" rel=\"nofollow noopener\" title=\"http://techbase.kde.org/Development/Tools/Automoc4#Features\">http://techbase.kde.org/Dev...</a><br>for the details.</p>","replies":[]},{"id":"dsq-457709969","author":"Aurélien","deleted":false,"createdAt":"2008-10-07T12:04:50Z","message":"<p>@Tom M, Girish, Matthias Kretz: thanks for the information, didn't know that. Will update my post.</p><p>@Ian Monroe: yes CSS can use objectName, but the purpose of it is different: it's here to style a specific widget instance, not a whole class.</p><p>@Albert Astals Cid, Kevin Kofler: CSS is not necessary evil, it's a new tool, you just need to use it correctly to ensure it integrates well with the rest of the application. It's also useful in places where you want to provide a different appearance (like Gwenview fullscreen mode)</p>","replies":[]},{"id":"dsq-457709961","author":"jstaniek","deleted":false,"createdAt":"2008-10-07T20:48:11Z","message":"<p>warning: 'SomeWidgetPrivate first seen as class, then as struct' ;)</p>","replies":[]},{"id":"dsq-457709964","author":"Aurélien","deleted":false,"createdAt":"2008-10-08T00:31:43Z","message":"<p>@jstaniek: interesting, gcc does not complain when I write this, is msvc pickier? (I know you work on kde-win32 :-) )</p>","replies":[]},{"id":"dsq-457709988","author":"Kari","deleted":false,"createdAt":"2010-01-13T15:31:14Z","message":"<p>Note: If it still doesn't work and the InternalWidget class is inside a namespace, then it must be referenced in CSS like this: MyNameSpace--InternalWidget { background-color: blue; }</p>","replies":[]}]
