[{"id":"dsq-2419461422","author":"Christian","deleted":false,"createdAt":"2015-12-21T07:44:57Z","message":"<p>Good to know! I worked exactly under the assumptions you describe, although I know that qt deals with forward slashes... Thanks for the tip =)</p>","replies":[]},{"id":"dsq-2425853258","author":"pgquiles","deleted":false,"createdAt":"2015-12-25T18:46:18Z","message":"<p>And this is exactly why I like System.IO.Path.Combine() in C#</p><p><a href=\"https://msdn.microsoft.com/en-us/library/system.io.path.combine(v=vs.110).aspx\" rel=\"nofollow noopener\" title=\"https://msdn.microsoft.com/en-us/library/system.io.path.combine(v=vs.110).aspx\">https://msdn.microsoft.com/...</a></p>","replies":[]},{"id":"dsq-2434649643","author":"Tom","deleted":false,"createdAt":"2016-01-01T12:11:24Z","message":"<p>It all depends what you actually want from your test, but it seems slightly brittle to me as it is (i.e. it could fail despite findBiggestFile returning a valid path that points to the correct file).</p><p>I would be inclined to try something like:</p><p>QCOMPARE(QFileInfo(result), QFileInfo(expected));</p><p>Doing it this way should mean you are testing the interpretation of the filepath, which, for a string used internally, is arguably what matters. (Docs for \"bool QFileInfo::operator==(const QFileInfo &amp; fileinfo) const\" say: \"Returns true if this QFileInfo object refers to a file in the same location as fileinfo; otherwise returns false.\") The only obvious disadvantage I can think of is if QCOMPARE doesn't print such useful info on failure because it's dealing with QFileInfos instead of QStrings.</p><p>I'm not suggesting you should use QDir::separator(), merely that your subtle bug can be avoided completely by testing whether the result has the same meaning as expected, without requiring it to have exactly the same formatting as well.</p>","replies":[{"id":"dsq-2437471732","author":"Aurélien Gâteau","deleted":false,"createdAt":"2016-01-03T15:02:52Z","message":"<p>That's an interesting and probably more robust approach, but the drawback of not getting any useful output from QCOMPARE in case of failure is annoying.</p>","replies":[]}]}]