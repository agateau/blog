[{"id":"dsq-1151626694","author":"Alberto Mardegan","deleted":false,"createdAt":"2013-12-05T14:39:48Z","message":"<p>This is cool! Looking forward to see these in the frameworks documentation! :-)</p><p>On a side note, what do you mean with \"simplified\"? It looks like some dependencies get removed in the simplified version; why is that?</p>","replies":[{"id":"dsq-1151639541","author":"Aurélien Gâteau","deleted":false,"createdAt":"2013-12-05T14:51:58Z","message":"<p>Mmm, as I said in the beginning of the \"Examples\" paragraph: \"The 'simplified' versions have been run through tred.\". So you are right, some dependencies are removed in the simplified versions.</p>","replies":[]}]},{"id":"dsq-1151651067","author":"dhaumann","deleted":false,"createdAt":"2013-12-05T15:02:46Z","message":"<p>You might want to try converting the .dot-files to TikZ/TeX code, since the result often looks better. It's described here: <a href=\"http://www.scribd.com/doc/74694558/Graphviz-and-TikZ\" rel=\"nofollow noopener\" title=\"http://www.scribd.com/doc/74694558/Graphviz-and-TikZ\">http://www.scribd.com/doc/7...</a></p>","replies":[{"id":"dsq-1151686987","author":"Aurélien Gâteau","deleted":false,"createdAt":"2013-12-05T15:32:58Z","message":"<p>Do you have examples of the different renderings? Having gone through the presentation you linked to, I am not sure what would be the gain.</p>","replies":[{"id":"dsq-1152193639","author":"dhaumann","deleted":false,"createdAt":"2013-12-05T22:33:34Z","message":"<p>TikZ usually draws more accurate. For instance, in the images above the arrow tip points into the rectangles (just some pixels). With TikZ this does not happen. But yes, generally, the result is probably very similar. Not sure whether it's worth to follow this ;)</p>","replies":[]}]}]},{"id":"dsq-1152597373","author":"Alex","deleted":false,"createdAt":"2013-12-06T07:54:44Z","message":"<p>Do you know that you can configure what cmake puts into the dot files ?<br><a href=\"http://www.cmake.org/cmake/help/v2.8.12/cmake.html#module:CMakeGraphVizOptions\" rel=\"nofollow noopener\" title=\"http://www.cmake.org/cmake/help/v2.8.12/cmake.html#module:CMakeGraphVizOptions\">http://www.cmake.org/cmake/...</a></p><p>Alex</p>","replies":[{"id":"dsq-1152673994","author":"Aurélien Gâteau","deleted":false,"createdAt":"2013-12-06T10:03:11Z","message":"<p>Oh, no I did not know this, thanks for pointing it out.</p><p>I just had a look and it does not seem to contain very interesting settings for what I do, though, except maybe GRAPHVIZ_IGNORE_TARGETS: kf5dot-generate currently has a centralized blacklist, but it could be useful to create a CMakeGraphVizOptions.cmake file in repositories to define repository-specific blacklists.</p>","replies":[]}]},{"id":"dsq-1154859761","author":"jpetso","deleted":false,"createdAt":"2013-12-08T13:17:43Z","message":"<p>Rather interesting. I wonder how much of a performance impact there would be if ki18n switched from kjs to QtQml's JS host, or if that's something that would be considered desirable. On first thought, it seems like it could be a good idea to replace the only occurrence of kjs with a roughly comparable Qt package shipped by default, which might have special appeal for people targeting grossly limiting mobile platforms (*ahem*). That, and pretty much everything depends on ki18n. (Could it be moved to tier 1 if such a change happened?)</p>","replies":[{"id":"dsq-1156366435","author":"Aurélien Gâteau","deleted":false,"createdAt":"2013-12-09T20:21:00Z","message":"<p>I wanted this to happen as well. This was discussed but KI18n maintainer needs to be convinced it is a good idea to do so :)</p>","replies":[]}]}]